<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Quality | ジタバタしばた]]></title>
  <link href="http://uryyyyyyy.shake-freek.com/blog/categories/quality/atom.xml" rel="self"/>
  <link href="http://uryyyyyyy.shake-freek.com/"/>
  <updated>2016-01-09T12:06:02+09:00</updated>
  <id>http://uryyyyyyy.shake-freek.com/</id>
  <author>
    <name><![CDATA[しばたこ]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[出荷管理]]></title>
    <link href="http://uryyyyyyy.shake-freek.com/blog/2014/06/22/delivery-management/"/>
    <updated>2014-06-22T12:08:01+09:00</updated>
    <id>http://uryyyyyyy.shake-freek.com/blog/2014/06/22/delivery-management</id>
    <content type="html"><![CDATA[<p>ソフトウェア・工場に限らないDeliveryの話。
このページを参考にしました。<a href="http://www.omoshirogari.com/delivery.htm">Dの問題</a></p>

<!--more-->

<h3 id="section">生産管理に万能解はあるのか</h3>

<p>システムパッケージを導入したからといって、生産管理に直結するわけではない。
能力以上の機能を期待していることがほとんど。
（システムへの理解が足りない？営業が期待値を上げすぎ？）</p>

<p>情報を整理整頓できて始めてシステムが機能できる。</p>

<h3 id="section-1">標準化をサボるな</h3>

<ul>
  <li>作業が複雑で標準化できない。</li>
  <li>標準化するなんてめんどくさい。</li>
  <li>ウチは特殊だから。。。</li>
</ul>

<p>現場がそう思っている時点で改善できない。</p>

<p>標準化できなければシステム化、効率化はできない。
システムはそこまで万能ではない。
システムを導入するということは、仕事内容が変わることを意味する。</p>

<h3 id="section-2">標準化のステップ</h3>

<p>４つのCというテクニックがある。</p>

<ul>
  <li>Collectー列挙する</li>
  <li>Clasifyー分類する</li>
  <li>Compareー比較する</li>
  <li>Chooseー選択する</li>
</ul>

<p>まずはデータを収集して一元管理する。
そのデータを分類する。
比較する軸を定めて比較し、優先度をつけて選択する。</p>

<h3 id="section-3">お客さんの要望は？</h3>

<p>納期・品質・コスト、全てが順調なら問題ないのですが、
概して営業はどこかで無茶をするもの。（そうしなければ勝てないので）</p>

<p>また、納期だけが明確に差し迫ってくるのでそれを追求しますが、
本来は品質やコストもお客さんの要望のはず。
それを差し置いて納期だけに注力するのは誰得。</p>

<p>営業と出荷管理とが一体となってお客さんの要望に合うものを提供しないといけない。</p>

<h3 id="section-4">品質管理のためには</h3>

<p>お客様のQCDの要望を満たすことなのであれば、
まずは期待値のコントロールをしておく必要がある。</p>

<ul>
  <li>営業は、お客様の要望を踏まえて、必達・目標の指標を握っておく。</li>
  <li>開発は、自分たちの工数や効率から、どこまでなら間に合うのかを用意しておく。</li>
</ul>

<p>それらを合わせて管理してお互いに協業できないと共倒れになる。</p>

<p>そのためには客観的な指標が必要。
（カン・経験・度胸といった暗黙知に頼らない）</p>

<p>営業が独断で決めれることは多くない。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[品質で儲ける]]></title>
    <link href="http://uryyyyyyy.shake-freek.com/blog/2014/06/22/quality-management/"/>
    <updated>2014-06-22T09:54:03+09:00</updated>
    <id>http://uryyyyyyy.shake-freek.com/blog/2014/06/22/quality-management</id>
    <content type="html"><![CDATA[<p>このWebページを読んでです。
<a href="http://www.omoshirogari.com/quality.htm">品質でもうけなさい</a></p>

<!--more-->

<h3 id="section">問題を認識する</h3>

<p>問題がない会社はヤバイ。
問題がないのではなくて、発見できていないだけだから。</p>

<p>まずは問題を認識して、改善しなきゃと思うこと。
現場・マネージャが改善しようと思わなければ改善できない。</p>

<h2 id="section-1">問題解決の方法</h2>

<p>問題解決に特効薬はあるのか？</p>

<p>色々なテクニックはあるが、根底にあるのは、
現場が主体的に改善しようと思うこと。</p>

<ul>
  <li>マネージャーは社員に方向性を示し、率いること。</li>
  <li>作業者は、意義を理解して取り組むこと。</li>
</ul>

<p>変更は痛みを伴うが、そこを徹底して行うこと。</p>

<h3 id="section-2">品質とは？</h3>

<p>品質とは、コストパフォーマンスがよくないこと。</p>

<p>品質改善は生産性の向上で、つまりは生産の仕組みの変更にほかならない。</p>

<h3 id="section-3">どう評価するか？</h3>

<p>生産性向上が上手くいっているかどうかは、数値化しないとわからない。
まずは見える化すること。優先度を付けれるようになること。</p>

<p>数値化は、件数でなくコストで把握しろ</p>

<p>コストの算出は以下。</p>

<p><code>
コスト＝人件費ロス＋経費ロス
</code></p>

<ul>
  <li>人件費ロスは、どのくらい作業量が増えるか。</li>
  <li>経費ロスは、設備費やお客様へのペナルティ・営業コストなど。</li>
</ul>

<h3 id="section-4">どう行動するか？</h3>

<h4 id="section-5">生産・開発</h4>

<p>開発の責任は、ものを作ることだけではない。</p>

<p>いくらいいものを作っても、3年後とかでは話にならない。
QCDを守った上で開発することが責任。</p>

<p>ただ、実際には全て守ることは難しいため、
その線引き・優先度をどうするかを決めておく必要がある。</p>

<h4 id="section-6">品質保証</h4>

<p>保証とは、</p>

<blockquote>
  <p>大丈夫だ、確かだとうけあうこと。
品質保証は、品質は間違いなく良いと太鼓判を押す話です。欠陥があったり不具合が起きたりして、お客様が損失を被るようなことがあってはいけません。</p>
</blockquote>

<p>確かだと請け合うには、決して、お客様の要望だけ聞いて良くなるわけではない。</p>

<ul>
  <li>各工程がきちんと行われているかをマネジメントする</li>
  <li>きちんと環境や条件を整えて、正確性・再現性を持った上で検証する</li>
</ul>

<p>検証作業にはコストがかかる。もし手戻りがあって製品に変更があった場合には、
全ての検証をやり直さなくてはいけない。</p>

<p>それはすごくコストがかかるため、各工程で不具合を潰せているかきちんとマネジメントしておくことが重要。</p>

<h4 id="section-7">営業</h4>

<p>営業も品質に関わる。
なぜなら、品質とは、顧客の求めるQCDを満たしたものであるため。</p>

<p>営業の視点・開発の視点、どちらかだけでは機能しないため、
お客様の要望を正しく聞いて調整する責任がある。</p>

<p>営業・コンサルとの意見交流をすること
現在の進捗をいつでも確認できるようにすること。
お客様の期待値のコントロールをすること</p>

<h3 id="section-8">効率化を図る</h3>

<p>品質の向上には全体最適が必要です。
大きく分けると以下のような分類があります。</p>

<h4 id="section-9">マネジメント</h4>

<p>効率化におけるマネジメントの役割は、
事後の姿を共有すること、そこへ向けての障害（経済的・権限的）を取り除くこと</p>

<h4 id="section-10">ルール</h4>

<p>ルールを定めると効率化するように見えますが、
かっちり決めるよりも現場が選ぶことができないと面白くない。
それこそ機械や仕組みに指示される感じになる。</p>

<p>納得するシナリオが大切。</p>

<h4 id="section-11">シナリオ</h4>

<p>「事前の計画が7割」などというように、
何をどうするのかを決めておかなければ、
途中で混乱することになります。</p>

<p>何のためにやるのか、どうやるのかを
ブレのないように共有して振りかえれるようにすること。</p>

<h3 id="section-12">問題を把握する</h3>

<p>何が問題なのか、どのくらい優先すべき問題なのかを見極めること</p>

<p>データだけも、現場だけでも上手く把握できないケースが多い。</p>

<p>まずは問題を視覚化すること。何でもいいので試してみること。</p>

<p>順番としては以下。</p>

<ul>
  <li>問題を定量化し問題解決の評価基準を決める
    <ul>
      <li>開発中は→工数削減</li>
      <li>評価は→手戻り・不具合報告の数。</li>
      <li>コンサル→問い合わせの処理数</li>
    </ul>
  </li>
  <li>評価基準をモニターして現状の実力を把握する
    <ul>
      <li>システムの領分</li>
    </ul>
  </li>
  <li>問題解決による効果目標を決定する
    <ul>
      <li>人力</li>
    </ul>
  </li>
</ul>

<h3 id="section-13">実行する</h3>

<p>PDCAを回すこと
まずは仮説やアクションプランを立てた上で実行。
都度振り返って確認する。</p>

<p>問題の本質を捉えること。
事後対応するのではなく、発生原因を突き止めることが大切。</p>

<p>事後のチェックや改善はとても時間のかかるもので、
大抵は忙殺されてしまう。</p>

<p>管理・チェックすることはコストのかかることだと認識して、
最低限で済ませるのがやりやすい</p>

<h3 id="section-14">改善の発想</h3>

<p>いざ改善する際にアイデアを出すには、
自由な発想（ブレインストーミングと呼ばれるもの）を行う必要がある。
まずは手数を増やして、コストの面での有効策を見つける。</p>

<h4 id="section-15">ヒューマンエラー</h4>

<p>ヒューマンエラーと呼ばれているものは、ほとんどが原因の追求が徹底できていない。</p>

<p>例えば、どんどんチェックリストを増やして、複雑になる。
結果として、さらなるヒューマンエラーを生む。</p>

<p>複雑な解決手法は大抵は混乱を招くだけ。基本を知っていればほとんど解決できる。</p>
]]></content>
  </entry>
  
</feed>
