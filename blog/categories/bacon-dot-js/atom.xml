<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Bacon.js | ジタバタしばた]]></title>
  <link href="http://uryyyyyyy.shake-freek.com/blog/categories/bacon-dot-js/atom.xml" rel="self"/>
  <link href="http://uryyyyyyy.shake-freek.com/"/>
  <updated>2015-05-06T20:34:19+09:00</updated>
  <id>http://uryyyyyyy.shake-freek.com/</id>
  <author>
    <name><![CDATA[しばたこ]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[関数プログラミング試行錯誤]]></title>
    <link href="http://uryyyyyyy.shake-freek.com/blog/2014/09/23/functional-programing/"/>
    <updated>2014-09-23T23:12:16+09:00</updated>
    <id>http://uryyyyyyy.shake-freek.com/blog/2014/09/23/functional-programing</id>
    <content type="html"><![CDATA[<p>なんとかして関数型プログラミングをやりたいんですが、
慣れてないので苦戦中です。</p>

<p>とりあえず試行錯誤の記録を残しておきます。</p>

<h2 id="section">目的</h2>

<p>関数プログラミングをしたいモチベーションは、</p>

<ul>
  <li>なるべく小さなまとまりに分け、テストをしやすくする。</li>
  <li>処理の流れを宣言的に書いて見やすくする。</li>
  <li>システムのスケールアウトに対応する。</li>
</ul>

<p>です。</p>

<p>http://qiita.com/kenokabe/items/a8477694a499ca869cde</p>

<h2 id="section-1">言語と特徴</h2>

<h3 id="scala">Scala</h3>

<ul>
  <li>サーバーサイド（WebAPIサーバー）の実装に使っている。</li>
  <li>DBサーバーへのアクセスを抽象化したい。</li>
  <li>valとdefの違い、implicit parameterの使いドコロが難しい</li>
  <li>関数の結合とかしていきたい。</li>
</ul>

<h4 id="section-2">理想のイメージ</h4>

<ul>
  <li>DAO層はRDBでもCacheでも、非同期でも対応できるようにしたい。</li>
  <li>Logic部はテスタブル・粗結合な小さな関数を組み合わせたい。</li>
  <li>newとか書きたくない。状態を持ちたくない。</li>
  <li>ローカル変数もなるべく使わずメソッドチェーン的に書きたい。</li>
</ul>

<h3 id="javascript">Javascript</h3>

<ul>
  <li>WebAPIクライアントとして使っている。</li>
  <li>bacon.js lodash.jsを主に使う予定。</li>
  <li>演算はサーバーに任せるのでもっぱらDOM操作系</li>
  <li>FRPに興味があるので試してみたい。</li>
</ul>

<h4 id="section-3">目指すカタチ</h4>

<ul>
  <li>イベント・DOMの管理は全てControllerで把握したい。</li>
  <li>FRPは興味あるけど、Angularでバインドしたデータの変更が追い切れなくなった経験があるので、データバインディング嫌い。</li>
  <li>そもそもModelっていう状態を持ちたくない。</li>
  <li>WebAPIをリッチに用意することで、クライアントはそもそもシンプルにしたい。</li>
  <li>手続き型を卒業して全体の見通しを良くしたい。</li>
</ul>

<h2 id="section-4">困った例</h2>

<h3 id="baconjs">bacon.jsのイベントストリームを使うと、パラメータが足りない。</h3>

<h4 id="section-5">事象</h4>

<p>ｊQueryプラグインのオブジェクトに対してeventStreamを作っても、パラメータが一つしか取れない。</p>

<h4 id="section-6">解決法</h4>

<p>普通にイベントを貼り付けて、イベント発火時にイベントストリームを後から作ればいいや。</p>

<h3 id="scaladaointerface">ScalaのDAO層のinterfaceをどうするか？</h3>

<h4 id="section-7">事象</h4>

<p>DAO層はCacheサーバーの場合とRDBの場合とがあるが、session（RDBのtransaction・connection管理用）の使い回しとか返す型とかをどうしようか迷った。</p>

<h4 id="section-8">解決策</h4>

<p>そもそも、読み込みと書き込みで用途が違うことに気がついた。</p>

<p>KVS系の場合はそもそも書き込みしないので、読み込みはsessionを含めず、書き込みだけ含める仕様に変える。</p>

<p>そもそも書き込みだけ別オブジェクトにすべき。</p>
]]></content>
  </entry>
  
</feed>
